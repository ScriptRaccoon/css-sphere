@use "sass:list";
@use "sass:math";

:root {
    --size: min(600px, 80vw);
    --inner-perspective: calc(0.3 * var(--size));
    --outer-perspective: calc(1.25 * var(--size));
}

$sin-values: -1, -0.984808, -0.93969, -0.866025, -0.766044, -0.642788,
    -0.5, -0.34202, -0.173648, 0, 0.173648, 0.34202, 0.5, 0.642788,
    0.766044, 0.866025, 0.939693, 0.984808, 1;
$cos-values: 0, 0.173648, 0.34202, 0.5, 0.642788, 0.766044, 0.866025,
    0.939693, 0.984808, 1, 0.984808, 0.939693, 0.866025, 0.766044,
    0.642788, 0.5, 0.34202, 0.173648, 0;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background: #111;
    overflow: hidden;
    color: #fff;
    font-family: Consolas, monospace;
}

#scene {
    perspective: var(--outer-perspective);
    transform-style: preserve-3d;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    transition: perspective 1s ease-in-out;
    pointer-events: none;
    z-index: 0;

    * {
        transform-style: preserve-3d;
        position: absolute;
    }
}

#sphere {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    animation: rotate-around 40s linear infinite;

    @keyframes rotate-around {
        0% {
            transform: rotateX(-20deg) rotateY(0deg);
        }
        10% {
            transform: rotateX(-20deg) rotateY(36deg);
        }
        50% {
            transform: rotateX(-70deg) rotateY(180deg);
        }
        60% {
            transform: rotateX(-70deg) rotateY(216deg);
        }
        100% {
            transform: rotateX(-20deg) rotateY(360deg);
        }
    }

    .longitudes,
    .latitudes {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .longitude,
    .latitude {
        border-radius: 50%;
        border: 5px solid;
        aspect-ratio: 1 / 1;
    }

    .longitude {
        border-color: #0f0a;
        width: var(--size);
        --angle: 0;
        transform: rotateY(calc(var(--angle) * 1deg));
    }

    .latitude {
        border-color: #0ffa;
        --sine: 0;
        --cosine: 0;
        width: calc(var(--cosine) * var(--size));
        transform: translateY(calc(var(--sine) * 0.5 * var(--size)))
            rotateX(90deg);
    }

    $count: 19;

    @for $i from 1 through $count {
        .longitude:nth-child(#{$i}) {
            --angle: #{math.div($i, $count) * 180};
        }

        .latitude:nth-child(#{$i}) {
            --sine: #{list.nth($sin-values, $i)};
            --cosine: #{list.nth($cos-values, $i)};
        }
    }
}

label {
    position: absolute;
    margin: 15px;
    display: inline-block;
    background-color: #444;
    box-shadow: 0px 0px 10px #111a;
    padding: 8px 16px;
    border-radius: 4px;
    font-size: 18px;
    z-index: 10;
    opacity: 0.8;

    &:hover {
        cursor: pointer;
        opacity: 1;
    }
}

input {
    display: none;
    &:checked ~ #scene {
        perspective: var(--inner-perspective);
    }
    &:not(:checked) ~ #scene {
        perspective: var(--outer-perspective);
    }
}
